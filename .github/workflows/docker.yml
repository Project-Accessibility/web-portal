name: Docker Build and Push

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      ## START SET CORRECT DOCKER TAG
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Replace main Branch Names with latest
        if: env.BRANCH_NAME == 'main'
        shell: bash
        run: echo "BRANCH_NAME=latest" >> $GITHUB_ENV

      - name: Check value of env.BRANCH_NAME
        shell: bash
        run: echo ${{ env.BRANCH_NAME }}
      ## END SET CORRECT DOCKER TAG

      ## Configure, build and push docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          # Don't push draft pull requests
          push: ${{ github.event.pull_request.draft == false && (env.BRANCH_NAME == 'develop' || env.BRANCH_NAME == 'main') }}
          tags: ghcr.io/project-accessibility/web-portal:${{GITHUB_HEAD_REF-${GITHUB_REF##*/}}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache